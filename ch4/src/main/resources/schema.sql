DROP TABLE IF EXISTS NOTICE;

create table user
(
    id bigint generated by default as identity,
    email varchar(255),
    password varchar(255),
    phone varchar(255),
    reg_date timestamp,
    user_name varchar(255),
    update_date timestamp,
    STATUS INTEGER,
    LOCK_YN BOOLEAN,
    primary key (id)
);

create table NOTICE
(
    ID BIGINT auto_increment primary key,
    TITLE     VARCHAR(255),
    CONTENTS  VARCHAR(255),

    HITS            INTEGER,
    LIKES           INTEGER,
    REG_DATE        TIMESTAMP,
    UPDATE_DATE     TIMESTAMP,
    DELETED_DATE    TIMESTAMP,
    DELETED         BOOLEAN,

    USER_ID         BIGINT,
    constraint FK_NOTICE_USER_ID foreign key(USER_ID) references USER(ID)
);

create table notice_like (
    id bigint generated by default as identity,
    notice_id bigint,
    user_id bigint,

    constraint  FK_NOTICE_LIKE_NOTICE_ID foreign key (NOTICE_ID) references NOTICE (ID),
    constraint  FK_NOTICE_LIKE_USER_ID foreign key (USER_ID) references USER (ID),
    primary key (id)
);

create table USER_LOGIN_HISTORY
(
    ID          bigint auto_increment primary key,
    USER_ID     BIGINT,
    EMAIL       VARCHAR(255),
    USER_NAME   VARCHAR(255),
    LOGIN_DATE  TIMESTAMP,
    IP_ADDR     VARCHAR(255)
);

create table BOARD_TYPE
(
    ID          BIGINT auto_increment primary key,
    BOARD_NAME  VARCHAR(255),
    REG_DATE    TIMESTAMP,
    UPDATE_DATE TIMESTAMP,

    USING_YN BOOLEAN
);

CREATE TABLE BOARD
(
	ID BIGINT AUTO_INCREMENT primary key,
	CONTENT VARCHAR(255),
	REG_DATE TIMESTAMP,
	TITLE VARCHAR(255),
	BOARD_TYPE_ID BIGINT,
	USER_ID BIGINT,
	TOP_YN BOOLEAN,

	PUBLISH_START_DATE DATE,
	PUBLISH_END_DATE DATE,

	CONSTRAINT FK_BOARRD_TYPE_ID FOREIGN KEY (BOARD_TYPE_ID) REFERENCES BOARD_TYPE(ID),
	CONSTRAINT FK_BOARD_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);

create table board_hits (
    id bigint AUTO_INCREMENT primary key,
    reg_date timestamp,
    board_id bigint,
    user_id bigint,

    CONSTRAINT FK_BOARD_HITS_BOARD_ID foreign key (board_id) references BOARD(ID),
    CONSTRAINT FK_BOARD_HITS_USER_ID foreign key (user_id) references USER(ID)
);

create table board_like (
    id bigint AUTO_INCREMENT primary key,
    reg_date timestamp,
    board_id bigint,
    user_id bigint,

    CONSTRAINT FK_BOARD_LIKE_BOARD_ID foreign key (board_id) references BOARD(ID),
    CONSTRAINT FK_BOARD_LIKE_USER_ID foreign key (user_id) references USER(ID)
);

create table board_bad_report (
    id bigint AUTO_INCREMENT primary key,
    board_contents varchar(255),
    board_id bigint, board_reg_date timestamp,
    board_title varchar(255),
    board_user_id bigint,
    comments varchar(255),
    reg_date timestamp,
    user_email varchar(255),
    user_id bigint,
    user_name varchar(255)
);

create table board_scrap (
    id bigint AUTO_INCREMENT primary key,
    board_contents varchar(255),
    board_id bigint,
    board_reg_date timestamp,
    board_title varchar(255),
    board_type_id bigint,
    board_user_id bigint,
    reg_date timestamp,
    user_id bigint,

    CONSTRAINT FK_BOARD_SCRAP foreign key (USER_ID) references USER (ID)
);

create table board_bookmark (
    id bigint AUTO_INCREMENT primary key,
    user_id bigint,
    board_id      bigint,
    board_type_id bigint,
    board_title varchar(255),
    board_url varchar(255),
    reg_date timestamp,

    CONSTRAINT FK_BOARD_BOOKMARK_USER_ID foreign key (USER_ID) references USER (ID)
);

create table user_Interest (
    id bigint AUTO_INCREMENT primary key,

    user_id bigint,
    interest_user_id bigint,
    reg_date timestamp,

    CONSTRAINT FK_USER_INTEREST_USER_ID foreign key (USER_ID) references USER (ID),
    CONSTRAINT FK_USER_INTEREST_INTEREST_USER_ID foreign key (interest_user_id) references USER (ID)
);

create table BOARD_COMMENT (
    ID       BIGINT AUTO_INCREMENT primary key,
    COMMENTS VARCHAR(255),
    REG_DATE TIMESTAMP,
    BOARD_ID BIGINT,
    USER_ID  BIGINT,
    CONSTRAINT FK_BOARD_COMMENT_USER_ID foreign key (USER_ID) references USER (ID),
    CONSTRAINT FK_BOARD_COMMENT_BOARD_ID foreign key (BOARD_ID) references BOARD (ID)
);

create table BOARD_POINT (
    ID              BIGINT AUTO_INCREMENT primary key,
    POINT           INTEGER,
    USER_POINT_TYPE VARCHAR(255),
    USER_ID         BIGINT,
    CONSTRAINT FK_USER_POINT_USER_ID foreign key(USER_ID) references USER (ID)
);